#!/usr/bin/env bash
#-- Requirements ---------------------------------------------------------------------------------------------------------------
command -v jq     >/dev/null 2>&2 || { echo >&2 "jq is required but is not available, aborting...";     exit 1; }
command -v docker >/dev/null 2>&2 || { echo >&2 "docker is required but is not available, aborting..."; exit 1; }

#-- Imported Variables ---------------------------------------------------------------------------------------------------------
project_name=$(cat < ./scripts/scripts_configuration.json | jq -r '.project_name')
project_owner=$(cat < ./scripts/scripts_configuration.json | jq -r '.project_owner')

target=$1
if [ -z "${target}" ]; then ls config/secrets && read -rp "Which environment would you like to target? Type your full answer here and press enter: " target; fi

network_name=$(cat < "./config/secrets/${target}/script_secrets.json"  | jq -r '.secrets.network_name')

database_url=$(cat < "./config/secrets/${target}/script_secrets.json" | jq -r '.secrets.database_url')
database_port=$(cat < "./config/secrets/${target}/script_secrets.json" | jq -r '.secrets.database_port')
database_name=$(cat < "./config/secrets/${target}/script_secrets.json" | jq -r '.secrets.database_name')
database_user=$(cat < "./config/secrets/${target}/script_secrets.json"  | jq -r '.secrets.database_user')
database_schema=$(cat < "./config/secrets/${target}/script_secrets.json" | jq -r '.secrets.database_schema')
database_password=$(cat < "./config/secrets/${target}/script_secrets.json" | jq -r '.secrets.database_password')
database_ssl_mode=$(cat < "./config/secrets/${target}/script_secrets.json" | jq -r '.secrets.database_ssl_mode')

run_local=$(cat < "./config/secrets/${target}/script_secrets.json"  | jq -r '.secrets.run_local')
if [ "${run_local}" == "true" ]; then  database_url="${project_owner}_${project_name}_ephemeral_${database_schema}_postgres"; fi

#-- Assume image exists --------------------------------------------------------------------------------------------------------
image_tag="${project_owner}/${project_name}_restorify"

dump_artifact_directory=tmp

#-- Create container for ephemeral use -----------------------------------------------------------------------------------------
container_name="${project_owner}_${project_name}_ephemeral_restorify"
sudo docker run                                                               \
  --name "${container_name}"                                                  \
  --network "${network_name}"                                                 \
  --env TARGET="${target}"                                                    \
  --env DATABASE_URL="${database_url}"                                        \
  --env DATABASE_PORT="${database_port}"                                      \
  --env DATABASE_NAME="${database_name}"                                      \
  --env DATABASE_USER="${database_user}"                                      \
  --env DATABASE_PASSWORD="${database_password}"                              \
  --env DATABASE_SSL_MODE="${database_ssl_mode}"                              \
  --volume $PWD/${dump_artifact_directory}:/dumps                             \
  --interactive --tty                                                         \
  --rm                                                                        \
  "${image_tag}"