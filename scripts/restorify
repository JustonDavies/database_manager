#!/usr/bin/env bash
#-- Requirements ---------------------------------------------------------------------------------------------------------------
command -v jq     >/dev/null 2>&2 || { echo >&2 "jq is required but is not available, aborting...";     exit 1; }
command -v docker >/dev/null 2>&2 || { echo >&2 "docker is required but is not available, aborting..."; exit 1; }

#-- Imported Variables ---------------------------------------------------------------------------------------------------------
project_name=$(cat < ./scripts/scripts_configuration.json | jq -r '.project_name')
project_owner=$(cat < ./scripts/scripts_configuration.json | jq -r '.project_owner')

target=$1
if [ -z "${target}" ]; then ls config/secrets && read -rp "Which environment would you like to target? Type your full answer here and press enter: " target; fi

run_local=$(cat < "./config/secrets/${target}/script_secrets.json"  | jq -r '.secrets.run_local')

#-- Preconditions --------------------------------------------------------------------------------------------------------------
/bin/bash ./scripts/helpers/_network_stage "${target}"
/bin/bash ./scripts/helpers/restorify_build_image

#-- Execute --------------------------------------------------------------------------------------------------------------------
if [ "${run_local}" == "true" ]; then  /bin/bash ./scripts/helpers/postgres_run_container "${target}"; fi

/bin/bash ./scripts/helpers/restorify_run_container "${target}"

#-- After Actions --------------------------------------------------------------------------------------------------------------
sudo chmod 700 ./tmp/*
sudo chown ${USER}:${USER} ./tmp/*